# Reference https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#publishing-a-package-using-an-action

name: Create and publish a container
on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-deploy-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # this will auto set the permission from repository to the package, no need to explicitly set the permissions. Also Links the package with repository. This GITHUB_TOKEN is generated when new repository is created.

      - name: Print GITHUB_TOKEN permissions
        run: |
          curl -s -I -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com | grep -i "X-OAuth-Scopes"

      - name: Build and push image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ github.event.release.tag_name }} # this will set tags as same as release tag, this will only work if Workflow trigger is set on release event of type published.
          provenance: true
          secrets: |
            "github-token=${{ secrets.GITHUB_TOKEN }}"

      # This step generates artifact attestations, which are important for verifying the integrity and authenticity of the artifacts produced by the workflow.
      # Artifact attestations provide a way to ensure that the artifacts have not been tampered with and are produced by a trusted source.
      # This is crucial for maintaining security and trust in the software supply chain, especially when distributing packages to end users or other systems.
      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ github.event.release.tag_name || 'latest' }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
# Simple Build and Push commands with no security and attestations
# Build Docker container - docker build -t ghcr.io/repoName:latest.
# Push Docker container - docker push ghcr.io/repoName:latest
